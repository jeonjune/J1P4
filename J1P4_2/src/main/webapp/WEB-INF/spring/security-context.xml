<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 시큐리티에 필요한 객체 선언 -->
	<bean id="customAccessDenied" class="com.itwillbs.security.CustomAccessDeniedHandler"/>
	<bean id="customLoginSuccess" class="com.itwillbs.security.CustomLoginSuccessHandler"/>
	<bean id="customAuthenticationFailure" class="com.itwillbs.security.CustomAuthenticationFailureHandler"/>
	
	<!-- <bean id="CustomNoPasswordEncoder" class="com.itwillbs.security.CustomNoPasswordEncoder"/> -->
	<!-- 암호화 처리를 위한 객체 생성 -->
	<bean id="bcryptPasswordEncoder"
		  class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- 시큐리티 관련 설정 -->
	<security:http>
	 	<security:intercept-url pattern="/all" access="permitAll"/>
		<security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/teamA/*" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/students/*" access="permitAll"/>
		<security:intercept-url pattern="/attendance/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_MEMBER')"/>
		<security:intercept-url pattern="/schedules/edit/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER')"/>
		<security:intercept-url pattern="/schedules/delete" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER')"/>
   	 	<security:intercept-url pattern="/schedules/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_MEMBER')"/>
		<security:intercept-url pattern="/classes/edit/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER')"/>
		<security:intercept-url pattern="/classes/delete" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER')"/>
		<security:intercept-url pattern="/classes/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_MEMBER')"/>
		<security:intercept-url pattern="/member/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_MEMBER')"/>
	 	<security:intercept-url pattern="/maintenance/updateDetail" access="hasRole('ROLE_MEMBER')"/>
	 	<security:intercept-url pattern="/maintenance/detail" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER')"/>
	 	<security:intercept-url pattern="/maintenance/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_MEMBER')"/>
	 	<security:intercept-url pattern="/employee/empList" access="hasRole('ROLE_ADMIN')"/>
	 	<security:intercept-url pattern="/employee/empDetail" access="hasRole('ROLE_ADMIN')"/>
	 	<security:intercept-url pattern="/employee/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_MEMBER')"/>
   	 	<security:intercept-url pattern="/vacation/vacation" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_MEMBER')"/>
   	 	<security:intercept-url pattern="/vacation/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER')"/>
   	 	
<!-- 		<security:form-login/> -->
		<security:form-login login-page="/main/login" 
							 authentication-failure-handler-ref="customAuthenticationFailure"
							 authentication-success-handler-ref="customLoginSuccess"/>
							 
		<!-- 로그아웃 -->
		<security:logout logout-url="/customLogout" invalidate-session="true"/>					 
		
		<!-- 접근 권한이 없는 경우 처리 -->
<!-- 		<security:access-denied-handler error-page="/accessErr"/> -->
		<security:access-denied-handler ref="customAccessDenied"/>
	</security:http>
	
	<!-- 인증 관리자 (1층 경비실) -->
	<security:authentication-manager>
		<security:authentication-provider>
		
			<security:jdbc-user-service data-source-ref="dataSource" 
										users-by-username-query="select user_id,user_pw,enabled from employee where user_id=?" 
										authorities-by-username-query="select user_id,auth from employee_auth where user_id=?"/>
			
			<!-- <security:password-encoder ref="CustomNoPasswordEncoder"/> -->
			<security:password-encoder ref="bcryptPasswordEncoder"/>
			
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
